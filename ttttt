0   (6,Funk,I32 56)
1   (4,IloadStack,I16 0)
2   (4,Istore,I16 0)
3   (4,Iload,I16 0)
4   (3,Iconst,I8 0)
5   (1,Ieq,None)
6   (4,Ift,I16 8)
7   (4,Goto,I16 8)
8   (3,Iconst,I8 1)
9   (1,Return,None)
10  (4,Iload,I16 0)
11  (3,Iconst,I8 1)
12  (4,Iload,I16 0)
13  (1,Isub,None)
14  (4,Invoke,I16 0)
15  (4,PopPrev,I16 1)
16  (1,Imul,None)
17  (1,Return,None)
18  (3,Iconst,I8 5)
19  (4,Invoke,I16 0)
20  (4,PopPrev,I16 1)



0   (6,Funk,I32 72)
1   (4,IloadStack,I16 0)
2   (4,Istore,I16 0)
3   (3,Iconst,I8 1)
4   (3,Iconvert,I8 8)
5   (4,Istore,I16 1)

6   (4,Iload,I16 1)
7   (4,Iload,I16 0)
8   (1,Imul,None)
9   (3,Iconvert,I8 4)
10  (4,Istore,I16 1)
11  (4,Iload,I16 0)
12  (3,Iconst,I8 1)
13  (1,Isub,None)
14  (3,Iconvert,I8 4)
15  (4,Istore,I16 0)

16  (4,Iload,I16 0)
17  (3,Iconst,I8 1)
18  (1,Igt,None)
19  (4,Ift,I16 -43)
20  (4,Iload,I16 1)
21  (1,Return,None)

22  (3,Iconst,I8 10)
23  (3,Iconvert,I8 8)
24  (4,Invoke,I16 0)
25  (4,PopPrev,I16 1)


Just (Seq [Define "factorial" Ti32 (Lambda [("n",Ti32)] (Seq [Define "result" Ti32 (Int 1),Seq [While (BinOp Gt (Id "n") (Int 1)) (Seq [Assign "result" (BinOp Mul (Id "result") (Id "n")),Assign "n" (BinOp Sub (Id "n") (Int 1))]),Return (Id "result")]])),Call "factorial" [Int 5]])


Just (Seq [Define "factorial" Ti64 (Lambda [("n",Ti64)] (Seq [If (BinOp Eq (Id "n") (Int 0)) (Return (Int 1)) (Seq []),Call "return" [BinOp Mul (Call "factorial" [BinOp Sub (Int 1) (Id "n")]) (Id "n")]])),Call "factorial" [Int 5]])